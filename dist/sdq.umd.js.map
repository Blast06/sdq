{"version":3,"file":"sdq.umd.js","sources":["../src/validators/is-rnc.js","../node_modules/luhn-alg/index.js","../src/validators/exception-cedula-list.js","../src/validators/is-cedula.js"],"sourcesContent":["'use strict'\n\n/**\n * Module export.\n * @public\n */\n\nexport default isRnc\n\n/**\n * Validate a given input to be a valid RNC.\n * @param {String} input The input to validate.\n */\n\nfunction isRnc(input) {\n  // The input must be a string.\n  if (typeof input !== 'string') {\n    return false\n  }\n\n  // Remove any character but digits.\n  input = input.replace(/[^\\d]/g, '')\n\n  // The input must contains 9 digits.\n  if (input.length !== 9) {\n    return false\n  }\n\n  return customLuhn(input)\n}\n\n/**\n * Verify that a given input adheres to a custom luhn formula.\n * @param {String} input The input to check.\n */\n\nfunction customLuhn(input) {\n  // Convert string input into array of integers.\n  input = input.split('').map(c => parseInt(c, 10))\n\n  // While a luhn formula require for each second digits to be doubled,\n  // this custom formula use different factors for each digits.\n  const factors = [7, 9, 8, 6, 5, 4, 3, 2]\n\n  // Sum the product of all digits by its factor.\n  let sum = 0\n\n  for (let i = factors.length - 1; i >= 0; i -= 1) {\n    sum = sum + factors[i] * input[i]\n  }\n\n  const remaining = sum % 11\n  let digit\n\n  if (remaining === 0) {\n    digit = 2\n  } else if (remaining === 1) {\n    digit = 1\n  } else {\n    digit = 11 - remaining\n  }\n\n  // Validar el resultado con el digito validador,\n  // que en caso del RNC es el ultimo digito.\n  return digit === input.pop()\n}\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.luhn = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = (function (array) {\n  return function (number) {\n    var len = number ? number.length : 0,\n        bit = 1,\n        sum = 0;\n\n    while (len--) {\n      sum += !(bit ^= 1) ? parseInt(number[len], 10) : array[number[len]];\n    }\n\n    return sum % 10 === 0 && sum > 0;\n  };\n})([0, 2, 4, 6, 8, 1, 3, 5, 7, 9]);\n\nmodule.exports = exports['default'];\n\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=index.js.map","export default [\n  '00000000018',\n  '11111111123',\n  '00100759932',\n  '00105606543',\n  '00114272360',\n  '00200123640',\n  '00200409772',\n  '00800106971',\n  '01200004166',\n  '01400074875',\n  '01400000282',\n  '03103749672',\n  '03200066940',\n  '03800032522',\n  '03900192284',\n  '04900026260',\n  '05900072869',\n  '07700009346',\n  '00114532330',\n  '03121982479',\n  '40200700675',\n  '40200639953',\n  '00121581750',\n  '00119161853',\n  '22321581834',\n  '00121581800',\n  '09421581768',\n  '22721581818',\n  '90001200901',\n  '00301200901',\n  '40200452735',\n  '40200401324',\n  '10621581792'\n]\n","'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nimport luhn from 'luhn-alg'\nimport exceptions from './exception-cedula-list'\n\n/**\n * Module export.\n * @public\n */\n\nexport default isCedula\n\n/**\n * Validate a given input to be a valid cÃ©dula de identidad electoral.\n * @param {String} input The input to validate.\n */\n\nfunction isCedula(input) {\n  // The input must be a string.\n  if (typeof input !== 'string') {\n    return false\n  }\n\n  // Remove any character but digits.\n  input = input.replace(/[^\\d]/g, '')\n\n  // The input must contains 11 digits.\n  if (input.length !== 11) {\n    return false\n  }\n\n  // If the input is a match of one in the exception list, then it is valid.\n  if (exceptions.indexOf(input) > -1) {\n    return true\n  }\n\n  return luhn(input)\n}\n"],"names":["isRnc","input","replace","length","split","map","parseInt","c","factors","sum","i","remaining","digit","pop","customLuhn","e","t","n","r","s","o","u","a","require","f","Error","code","l","exports","call","1","module","defineProperty","array","number","len","bit","exceptions","indexOf","luhn"],"mappings":"sRAcA,SAASA,EAAMC,SAEQ,iBAAVA,IAQU,OAHbA,EAAMC,QAAQ,SAAU,KAGtBC,QAYZ,SAAoBF,KAEVA,EAAMG,MAAM,IAAIC,IAAI,mBAAKC,SAASC,EAAG,UASxC,IALCC,GAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGlCC,EAAM,EAEDC,EAAIF,EAAQL,OAAS,EAAGO,GAAK,EAAGA,GAAK,KAChCF,EAAQE,GAAKT,EAAMS,OAG3BC,EAAYF,EAAM,GACpBG,WAEc,IAAdD,EACM,EACe,IAAdA,EACD,EAEA,GAAKA,SAKRC,IAAUX,EAAMY,MApChBC,CAAWb,mMC5ByV,SAASc,EAAEC,EAAEC,EAAEC,YAAYC,EAAEC,EAAEC,OAAOJ,EAAEG,GAAG,KAAKJ,EAAEI,GAAG,KAAKE,EAAkB,mBAATC,GAAqBA,EAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGV,EAAE,OAAOA,EAAEU,GAAE,GAAI,IAAII,EAAE,IAAIC,MAAM,uBAAuBL,EAAE,KAAK,MAAMI,EAAEE,KAAK,mBAAmBF,MAAMG,EAAEV,EAAEG,IAAIQ,YAAYZ,EAAEI,GAAG,GAAGS,KAAKF,EAAEC,QAAQ,SAASb,OAAOE,EAAED,EAAEI,GAAG,GAAGL,GAAG,OAAOI,EAAEF,GAAIF,IAAIY,EAAEA,EAAEC,QAAQb,EAAEC,EAAEC,EAAEC,UAAUD,EAAEG,GAAGQ,QAAkD,IAAI,IAA1ClB,EAAkB,mBAATa,GAAqBA,EAAgBH,EAAE,EAAEA,EAAEF,EAAEf,OAAOiB,MAAMF,EAAEE,IAAI,OAAOD,EAAtb,EAA2bW,GAAG,SAASP,EAAQQ,EAAOH,UAG5zBI,eAAeJ,EAAS,qBACtB,MAGT,QAAsB,SAAUK,UACvB,SAAUC,WACXC,EAAMD,EAASA,EAAO/B,OAAS,EAC/BiC,EAAM,EACN3B,EAAM,EAEH0B,SACIC,GAAO,GAAiCH,EAAMC,EAAOC,IAAzC7B,SAAS4B,EAAOC,GAAM,WAGtC1B,EAAM,IAAO,GAAKA,EAAM,GAVb,EAYlB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAExBmB,QAAUA,EAAA,kBAEN,GAvBkW,CAuB9V,SCtBb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,+BCXF,SAAkB3B,SAEK,iBAAVA,GAQU,QAHbA,EAAMC,QAAQ,SAAU,KAGtBC,SAKNkC,EAAWC,QAAQrC,IAAU,GAI1BsC,EAAKtC"}